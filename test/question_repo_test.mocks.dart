// Mocks generated by Mockito 5.3.2 from annotations
// in freezed_demo/test/question_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:freezed_demo/data/model/entity/employee.dart' as _i6;
import 'package:freezed_demo/data/model/response/question/question_detail_response.dart'
    as _i3;
import 'package:freezed_demo/data/model/response/question/question_response.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

import 'question_repo_test.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeQuestionResponse_0 extends _i1.SmartFake
    implements _i2.QuestionResponse {
  _FakeQuestionResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQuestionDetailResponse_1 extends _i1.SmartFake
    implements _i3.QuestionDetailResponse {
  _FakeQuestionDetailResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [QuestionRepoTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuestionRepoTest extends _i1.Mock implements _i4.QuestionRepoTest {
  MockQuestionRepoTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.QuestionResponse> getQuestions() => (super.noSuchMethod(
        Invocation.method(
          #getQuestions,
          [],
        ),
        returnValue:
            _i5.Future<_i2.QuestionResponse>.value(_FakeQuestionResponse_0(
          this,
          Invocation.method(
            #getQuestions,
            [],
          ),
        )),
      ) as _i5.Future<_i2.QuestionResponse>);
  @override
  _i5.Future<_i3.QuestionDetailResponse> getDetailQuestion() =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailQuestion,
          [],
        ),
        returnValue: _i5.Future<_i3.QuestionDetailResponse>.value(
            _FakeQuestionDetailResponse_1(
          this,
          Invocation.method(
            #getDetailQuestion,
            [],
          ),
        )),
      ) as _i5.Future<_i3.QuestionDetailResponse>);
  @override
  void getAllEmployee() => super.noSuchMethod(
        Invocation.method(
          #getAllEmployee,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addEmployee(_i6.Employee? employee) => super.noSuchMethod(
        Invocation.method(
          #addEmployee,
          [employee],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void deleteAllEmployee() => super.noSuchMethod(
        Invocation.method(
          #deleteAllEmployee,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
